import asyncio
from aiogram import Bot, Dispatcher
from aiogram.types import BotCommand # –í–∞–∂–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –∫–ª–∞—Å—Å
from dotenv import load_dotenv
import os
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä—ã
from handlers.comands import user_commands
from handlers.text_message import text_messages
from handlers.callbacks import callback_handlers
load_dotenv()
# –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å —Ñ–∞–π–ª config.py
# from config import BOT_TOKEN
TOKEN = os.getenv("BOT_TOKEN") # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω!

async def set_new_commands(bot: Bot):
    """
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –≤ –º–µ–Ω—é –±–æ—Ç–∞.
    """
    new_commands = [
        BotCommand(command="remains", description="üì¶ –ó–∞–ª–∏—à–∫–∏"),
        BotCommand(command="orders", description="üìÑ –ó–∞—è–≤–∫–∏ –Ω–∞ —Ç–æ–≤–∞—Ä"),
        BotCommand(command="help", description="‚ùì –ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å"),
        BotCommand(command="settings", description="‚öôÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"),
        BotCommand(command="about", description="‚ÑπÔ∏è –û –±–æ—Ç–µ"),
        # –¢—ã –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã
        # BotCommand(command="menu", description="–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"), # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å
    ]
    await bot.set_my_commands(new_commands)
    print("–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –≤ –º–µ–Ω—é —Å–ª–µ–≤–∞ –æ—Ç –≤–≤–æ–¥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã.")

async def main():
    bot = Bot(token=TOKEN)
    dp = Dispatcher()

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
    dp.include_router(user_commands.router)
    dp.include_router(callback_handlers.router)
    dp.include_router(text_messages.router)

    # –í—ã–∑–æ–≤–∏ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
    await set_new_commands(bot) # <-- –ó–¥–µ—Å—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–ª–∏–Ω–≥
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())