version: '3.8'

services:

#  db:
#    image: postgres:15.6
#    environment:
#      POSTGRES_DB: ${POSTGRES_DB}
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#    volumes:
#      - pgdata:/var/lib/postgresql/data
#    # Порт 5432 для БД можно оставить, если вам нужен прямой доступ к БД с хоста
#    # или если другие локальные инструменты его используют.
#    # Если БД нужна только внутри Docker-сети, можно убрать.
#    ports:
#      - "5432:5432"
#    restart: unless-stopped

  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"   # Публикуем HTTP порт на хост
      - "443:443" # Публикуем HTTPS порт на хост
    volumes:
      # Монтируем папку с вашими Nginx конфигами
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      # Монтируем папки для Certbot
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    depends_on:
      - agri_api # Nginx зависит от API
      - pgadmin  # Nginx зависит от PgAdmin
    restart: unless-stopped

  eridon_bot:
    container_name: eridon_bot
    build:
      context: ./bot
      dockerfile: Dockerfile
    env_file:
      - bot/.env
    volumes:
      - logging_data:/home/docker_user/app/log
    depends_on:
#      - db
      - agri_api # Бот зависит от API
      # - nginx # Если бот обращается к API через публичный домен (что редко), добавьте эту зависимость
    restart: unless-stopped
    environment:
      # API_URL для бота должен использовать имя сервиса API внутри Docker-сети
      API_URL: http://agri_api:8000

  agri_api:
    container_name: agri_api_container
    build:
      context: ./api
      dockerfile: Dockerfile
    # УДАЛИТЕ ИЛИ ЗАКОММЕНТИРУЙТЕ ЭТУ СТРОКУ, если доступ только через Nginx
    # ports:
    #   - "8000:8000"
    environment:
      DB_HOST: db # <-- ИСПРАВЛЕНО: имя сервиса БД в Docker Compose
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
#    depends_on:
#      - db
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_PATH: /pgadmin/ # Это внутренний путь PgAdmin, Nginx будет проксировать
    # УДАЛИТЕ ИЛИ ЗАКОММЕНТИРУЙТЕ ЭТУ СТРОКУ, если доступ только через Nginx
    # ports:
    #   - "5050:80" # PgAdmin внутри контейнера слушает порт 80
#    depends_on:
#      - db
    restart: unless-stopped

volumes:
#  pgdata:
  logging_data:
  pgadmin_data:
